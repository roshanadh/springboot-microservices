spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.jpa.hibernate.ddl-auto=update

server.port=8081
# 8080 for product service
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=order-service

# enable actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j Properties
## register health indicator - to see different states of the CB
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true 
## buffer size for the events
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
## wait for some number of requests to fail before switching states (with COUNT_BASED, we need to specify the size)
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
## when 5 back to back requests fail, then switch the state
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
## when 50% of the calls failed
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
## duration in open state, before moving to half-open state
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
## num of calls allowed in half-open state, in order to check if the requests are completed or not
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
## automatically transition between open to half-open state
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
# timeout
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
# Retry properties
## num of retries (if request is not completed after 3 retries,
## let circuit breaker handle it)
resilience4j.retry.instances.inventory.max-attempts=3
# wait for 5 seconds before doing a retry
resilience4j.retry.instances.inventory.wait-duration=5s

# Zipkin
spring.zipkin.base-url=http://localhost:9411
## with 1.0, we are sending 100% of the incoming requests to Zipkin
spring.zipkin.sampler.probability=1.0